{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","props","className","style","recipe","title","Math","round","calories","ingredients","map","ingredient","text","image","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","res","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAoBeA,MAhBf,SAAgBC,GACZ,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,iDAAcH,EAAMI,SACpB,6EAAuBC,KAAKC,MAAMN,EAAMO,UAAxC,WACA,oDACA,6BACKP,EAAMQ,YAAYC,KAAI,SAAAC,GAAU,OAC7B,6BAAKA,EAAWC,YAGxB,qBAAKV,UAAWC,IAAMU,MAAOC,IAAKb,EAAMY,MAAOE,IAAI,SCmChDC,MA9Cf,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAW,WACTC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACCC,MAAM,mCAAD,OAAoCL,EAApC,mBAZV,WAYU,oBAXT,qCAUG,cACXM,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAYhB,OACE,sBAAK7B,UAAU,MAAf,UACE,uBAAMA,UAAU,cAAcgC,SAPhB,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,IAKP,UACE,uBAAOiB,KAAK,OAAOnC,UAAU,aAAaoC,MAAOlB,EAAQmB,SAAU,SAACJ,GAAD,OAAKd,EAAUc,EAAEK,OAAOF,UAC3F,wBAAQD,KAAK,SAASnC,UAAU,gBAAhC,yDAEF,qBAAKA,UAAU,UAAf,SACCgB,EAAQR,KAAI,SAAAN,GAAM,OACjB,cAAC,EAAD,CAEEC,MAAOD,EAAOA,OAAOqC,MACrBjC,SAAUJ,EAAOA,OAAOI,SACxBK,MAAOT,EAAOA,OAAOS,MACrBJ,YAAeL,EAAOA,OAAOK,aAJxBL,EAAOA,OAAOqC,gBC1BdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.3b23b4ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\n\r\n\r\nfunction Recipe(props) {\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>Tên món: {props.title}</h1>\r\n            <p>Mức độ dinh dưỡng: {Math.round(props.calories)} calo</p>\r\n            <p>Thành phần:</p>\r\n            <ul>\r\n                {props.ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n            <img className={style.image} src={props.image} alt=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Recipe from './Recipe';\n\nfunction App() {\n\n  const APP_ID = \"3060e0e8\";\n  const APP_KEY = \"0da677dbc6ecd94320bd7ce6ba6829a8\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n\n  useEffect( ()=>{\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () =>{\n    const res = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await res.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n\n  }\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\" onSubmit={getSearch}>\n        <input type=\"text\" className=\"search-bar\" value={search} onChange={(e)=>setSearch(e.target.value)}/>\n        <button type=\"submit\" className=\"search-button\">Tìm món ăn bạn muốn</button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe\n          key={recipe.recipe.label} \n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image}\n          ingredients = {recipe.recipe.ingredients}\n        />\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3sjyw\",\"image\":\"recipe_image__2IxNa\"};"],"sourceRoot":""}